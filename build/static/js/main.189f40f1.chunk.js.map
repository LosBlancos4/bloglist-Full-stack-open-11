{"version":3,"sources":["components/Blog.js","components/LoginForm.js","components/BlogForm.js","components/Notification.js","components/Togglable.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","updateBlogHandler","removeBlogHandler","useState","visible","setVisible","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","title","author","id","onClick","url","likes","updatedBlog","updateLikes","user","name","LoginForm","username","password","handleUsernameChange","handlePasswordChange","handleSubmit","onSubmit","type","value","onChange","BlogForm","createBlog","setTitle","setAuthor","setUrl","addBlog","event","a","preventDefault","target","message","Togglable","React","forwardRef","props","ref","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","config","headers","Authorization","post","update","put","setToken","newToken","remove","delete","login","credentials","console","log","App","blogs","setBlogs","setUsername","setPassword","setUser","errorMessage","setErrorMessage","infoMessage","setInfoMessage","blogFormRef","useRef","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","blogObject","current","returnedBlog","concat","setTimeout","removeBlog","confirm","filter","n","updateBlog","map","handleLogin","loginService","setItem","stringify","handleLogout","removeItem","exception","sort","b","object1","object2","key","obj1","obj2","compareNumberObjects","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.189f40f1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Blog = ({ blog, updateBlogHandler, removeBlogHandler }) => {\r\n    const blogStyle = {\r\n        paddingTop: 10,\r\n        paddingLeft: 2,\r\n        border: 'solid',\r\n        borderWidth: 2,\r\n        marginBottom: 5\r\n    }\r\n\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const updateLikes = () => {\r\n        const updatedBlog = {\r\n            title: blog.title,\r\n            author: blog.author,\r\n            url: blog.url,\r\n            likes: blog.likes + 1\r\n        }\r\n\r\n        updateBlogHandler(blog.id, updatedBlog)\r\n    }\r\n\r\n    const removeBlog = () => {\r\n        removeBlogHandler(blog)\r\n    }\r\n\r\n    return (\r\n        <div style={blogStyle} className='blog'>\r\n            {!visible&&(\r\n                <div>\r\n                    {blog.title} {blog.author}\r\n                    <button id=\"view-button\" onClick={() => setVisible(true)}>view</button>\r\n                </div>\r\n            )}\r\n            {visible&&(\r\n                <div>\r\n                    <div>{blog.title} {blog.author} <button id=\"hide-button\" onClick={() => setVisible(false)}>hide</button></div>\r\n                    <div>{blog.url} </div>\r\n                    <div className='likes'>likes {blog.likes} <button id=\"like-button\" onClick={() => updateLikes()}>like</button></div>\r\n                    <div>{blog.user.name} </div>\r\n                    <button id=\"remove-button\" onClick={() => removeBlog()}>remove</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = ({\r\n    username,\r\n    password,\r\n    handleUsernameChange,\r\n    handlePasswordChange,\r\n    handleSubmit\r\n}) => {\r\n    return (\r\n        <div>\r\n            <h2>Log in to application</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    username\r\n                    <input\r\n                        id=\"username\"\r\n                        type=\"text\"\r\n                        value={username}\r\n                        name=\"Username\"\r\n                        onChange={handleUsernameChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    password\r\n                    <input\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        name=\"Password\"\r\n                        onChange={handlePasswordChange}\r\n                    />\r\n                </div>\r\n                <button id=\"login-button\" type=\"submit\">login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nLoginForm.propTypes  = {\r\n    username: PropTypes.string.isRequired,\r\n    password: PropTypes.string.isRequired,\r\n    handleUsernameChange: PropTypes.func.isRequired,\r\n    handlePasswordChange : PropTypes.func.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired\r\n}\r\n\r\nexport default LoginForm","import React, { useState } from 'react'\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [author, setAuthor] = useState('')\r\n    const [url, setUrl] = useState('')\r\n\r\n    const handleTitleChange = (event) => {\r\n        setTitle(event.target.value)\r\n    }\r\n\r\n    const handleAuthorChange = (event) => {\r\n        setAuthor(event.target.value)\r\n    }\r\n\r\n    const handleUrlChange = (event) => {\r\n        setUrl(event.target.value)\r\n    }\r\n\r\n    const addBlog = async (event) => {\r\n        event.preventDefault()\r\n        createBlog({\r\n            title: title,\r\n            author: author,\r\n            url: url\r\n        })\r\n        setTitle('')\r\n        setAuthor('')\r\n        setUrl('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>create new</h2>\r\n            <form onSubmit={addBlog}>\r\n                <div>\r\n                    title:\r\n                    <input\r\n                        id='title'\r\n                        type=\"text\"\r\n                        value={title}\r\n                        onChange={handleTitleChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    author:\r\n                    <input\r\n                        id='author'\r\n                        type=\"text\"\r\n                        value={author}\r\n                        onChange={handleAuthorChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    url:\r\n                    <input\r\n                        id='url'\r\n                        type=\"text\"\r\n                        value={url}\r\n                        onChange={handleUrlChange}\r\n                    />\r\n                </div>\r\n                <button id=\"create-button\" type=\"submit\">create</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogForm","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className=\"info\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst ErrorNotification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default { Notification, ErrorNotification }","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n    const [visible, setVisible] = useState(false)\r\n    const hideWhenVisible = { display: visible ? 'none' : '' }\r\n    const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n    const toggleVisibility = () => {\r\n        setVisible(!visible)\r\n    }\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            toggleVisibility\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div style={hideWhenVisible}>\r\n                <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n            </div>\r\n            <div style={showWhenVisible} className=\"togglableContent\">\r\n                {props.children}\r\n                <button onClick={toggleVisibility}>cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nTogglable.propTypes = {\r\n    buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n    }\r\n\r\n    const response = await axios.post(baseUrl, newObject, config)\r\n    return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${ baseUrl }/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n    }\r\n    const request = axios.delete(`${ baseUrl }/${id}`, config)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { getAll, create, update, setToken, remove }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n    console.log(credentials)\r\n    const response = await axios.post(baseUrl, credentials)\r\n    console.log(response.data)\r\n    return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\r\nimport Blog from './components/Blog'\r\nimport LoginForm from './components/LoginForm'\r\nimport BlogForm from './components/BlogForm'\r\nimport Notifications from './components/Notification'\r\nimport Togglable from './components/Togglable'\r\n\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n    const [blogs, setBlogs] = useState([])\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const [user, setUser] = useState(null)\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [infoMessage, setInfoMessage] = useState(null)\r\n\r\n    const blogFormRef = useRef()\r\n\r\n    useEffect(() => {\r\n        blogService.getAll().then(blogs =>\r\n            setBlogs( blogs )\r\n        )\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n        if (loggedUserJSON) {\r\n            const user = JSON.parse(loggedUserJSON)\r\n            setUser(user)\r\n            blogService.setToken(user.token)\r\n        }\r\n    }, [])\r\n\r\n    const addBlog = async (blogObject) => {\r\n        blogFormRef.current.toggleVisibility()\r\n        try {\r\n            const returnedBlog = await blogService.create(blogObject)\r\n            setBlogs(blogs.concat(returnedBlog))\r\n            setInfoMessage(`a new blog ${blogObject.title} by ${blogObject.author} added`)\r\n            setTimeout(() => {\r\n                setInfoMessage(null)\r\n            }, 5000)\r\n        } catch (exception) {\r\n            console.log(exception)\r\n            setErrorMessage('Something went wrong')\r\n            setTimeout(() => {\r\n                setErrorMessage(null)\r\n            }, 5000)\r\n        }\r\n    }\r\n\r\n    const removeBlog = async (blogObject) => {\r\n        console.log(blogObject)\r\n        if (window.confirm(`Remove blog ${blogObject.title} by ${blogObject.author}?`)) {\r\n            try {\r\n                console.log(user.token)\r\n                await blogService.remove(blogObject.id)\r\n                setBlogs(blogs.filter(n => n.id !== blogObject.id))\r\n                setInfoMessage(`blog ${blogObject.title} by ${blogObject.author} removed`)\r\n                setTimeout(() => {\r\n                    setInfoMessage(null)\r\n                }, 5000)\r\n            } catch (exception) {\r\n                console.log(exception)\r\n                setErrorMessage('No credentials for removing blog')\r\n                setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                }, 5000)\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateBlog = async (id, blogObject) => {\r\n        try {\r\n            const returnedBlog = await blogService.update(id, blogObject)\r\n            setBlogs(blogs.map(blog => blog.id !== id ? blog : returnedBlog))\r\n            setInfoMessage(`One like added to blog ${blogObject.title} by ${blogObject.author}`)\r\n            setTimeout(() => {\r\n                setInfoMessage(null)\r\n            }, 5000)\r\n        } catch (exception) {\r\n            console.log(exception)\r\n            setErrorMessage('Something went wrong')\r\n            setTimeout(() => {\r\n                setErrorMessage(null)\r\n            }, 5000)\r\n        }\r\n    }\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault()\r\n        try {\r\n            const user = await loginService.login({\r\n                username, password,\r\n            })\r\n\r\n            window.localStorage.setItem(\r\n                'loggedBlogappUser', JSON.stringify(user)\r\n            )\r\n            blogService.setToken(user.token)\r\n            setUser(user)\r\n            setUsername('')\r\n            setPassword('')\r\n        } catch (exception) {\r\n            setErrorMessage('wrong username or password')\r\n            setTimeout(() => {\r\n                setErrorMessage(null)\r\n            }, 5000)\r\n        }\r\n    }\r\n\r\n    const handleLogout = async (event) => {\r\n        event.preventDefault()\r\n        try {\r\n            window.localStorage.removeItem('loggedBlogappUser')\r\n            setUser(null)\r\n        } catch (exception) {\r\n            setErrorMessage('Something went wrong in logout')\r\n            setTimeout(() => {\r\n                setErrorMessage(null)\r\n            }, 5000)\r\n        }\r\n    }\r\n\r\n    const loginForm = () => (\r\n        <Togglable buttonLabel=\"log in\">\r\n            <LoginForm\r\n                username={username}\r\n                password={password}\r\n                handleUsernameChange={({ target }) => setUsername(target.value)}\r\n                handlePasswordChange={({ target }) => setPassword(target.value)}\r\n                handleSubmit={handleLogin}\r\n            />\r\n        </Togglable>\r\n    )\r\n\r\n    const blogForm = () => (\r\n        <Togglable buttonLabel=\"create new blog\" ref={blogFormRef}>\r\n            <BlogForm createBlog={addBlog} />\r\n        </Togglable>\r\n    )\r\n\r\n    const logOut = () => {\r\n        return (\r\n            <form onSubmit={handleLogout}><button type=\"submit\">logout</button></form>\r\n        )\r\n    }\r\n\r\n    function compareNumberObjects(object1, object2, key) {\r\n        const obj1 = object1[key]\r\n        const obj2 = object2[key]\r\n        if (obj1 < obj2) {\r\n            return 1\r\n        }\r\n        if (obj1 > obj2) {\r\n            return -1\r\n        }\r\n        return 0\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Blogs</h1>\r\n            <Notifications.Notification message={infoMessage} />\r\n            <Notifications.ErrorNotification message={errorMessage} />\r\n            {user === null ?\r\n                loginForm() :\r\n                <div>\r\n                    <p>{user.name} logged in {logOut()}</p>\r\n                    {blogForm()}\r\n                    <br></br>\r\n                    {blogs\r\n                        .sort((a, b) => { return compareNumberObjects(a, b, 'likes') })\r\n                        .map(blog => <Blog key={blog.id} blog={blog} updateBlogHandler={updateBlog} removeBlogHandler={removeBlog} />)\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}